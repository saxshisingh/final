import { JsonRpcId, JsonRpcIdentifier } from './json_rpc_types';
export declare type Web3APISpec = Record<string, (...params: any) => any>;
export declare type Web3APIMethod<T extends Web3APISpec> = string & keyof T;
export declare type Web3APIParams<API extends Web3APISpec, Method extends Web3APIMethod<API>> = Parameters<API[Method]>;
export interface Web3APIRequest<API extends Web3APISpec, Method extends Web3APIMethod<API>> {
    method: Method;
    params: Web3APIParams<API, Method>;
}
export interface Web3APIPayload<API extends Web3APISpec, Method extends Web3APIMethod<API>> extends Web3APIRequest<API, Method> {
    readonly jsonrpc?: JsonRpcIdentifier;
    readonly id?: JsonRpcId;
}
export declare type Web3APIReturnType<API extends Web3APISpec, Method extends Web3APIMethod<API>> = ReturnType<API[Method]>;
//# sourceMappingURL=web3_api_types.d.ts.map