import { JsonRpcResponse } from 'web3-types';
import { Web3Error } from '../web3_error_base';
export declare class ResponseError<ErrorType = unknown> extends Web3Error {
    code: number;
    data?: ErrorType | ErrorType[];
    constructor(response: JsonRpcResponse<unknown, ErrorType>, message?: string);
    toJSON(): {
        data: ErrorType | ErrorType[] | undefined;
        name: string;
        code: number;
        message: string;
    };
}
export declare class InvalidResponseError<ErrorType = unknown> extends ResponseError<ErrorType> {
    constructor(result: JsonRpcResponse<unknown, ErrorType>);
}
//# sourceMappingURL=response_errors.d.ts.map