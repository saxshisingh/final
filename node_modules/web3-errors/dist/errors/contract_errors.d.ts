import { Web3Error } from '../web3_error_base';
export declare class ResolverMethodMissingError extends Web3Error {
    address: string;
    name: string;
    code: number;
    constructor(address: string, name: string);
    toJSON(): {
        address: string;
        name: string;
        code: number;
        message: string;
    };
}
export declare class ContractMissingABIError extends Web3Error {
    code: number;
    constructor();
}
export declare class ContractOnceRequiresCallbackError extends Web3Error {
    code: number;
    constructor();
}
export declare class ContractEventDoesNotExistError extends Web3Error {
    eventName: string;
    code: number;
    constructor(eventName: string);
    toJSON(): {
        eventName: string;
        name: string;
        code: number;
        message: string;
    };
}
export declare class ContractReservedEventError extends Web3Error {
    type: string;
    code: number;
    constructor(type: string);
    toJSON(): {
        type: string;
        name: string;
        code: number;
        message: string;
    };
}
export declare class ContractMissingDeployDataError extends Web3Error {
    code: number;
    constructor();
}
export declare class ContractNoAddressDefinedError extends Web3Error {
    code: number;
    constructor();
}
export declare class ContractNoFromAddressDefinedError extends Web3Error {
    code: number;
    constructor();
}
export declare class ContractInstantiationError extends Web3Error {
    code: number;
}
//# sourceMappingURL=contract_errors.d.ts.map