"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Web3WSProviderError = exports.SubscriptionError = exports.InvalidClientError = exports.InvalidProviderError = exports.ProviderError = void 0;
const error_codes_1 = require("../error_codes");
const web3_error_base_1 = require("../web3_error_base");
class ProviderError extends web3_error_base_1.Web3Error {
    constructor() {
        super(...arguments);
        this.code = error_codes_1.ERR_PROVIDER;
    }
}
exports.ProviderError = ProviderError;
class InvalidProviderError extends web3_error_base_1.Web3Error {
    constructor(clientUrl) {
        super(`Provider with url "${clientUrl}" is not set or invalid`);
        this.clientUrl = clientUrl;
        this.code = error_codes_1.ERR_INVALID_PROVIDER;
    }
}
exports.InvalidProviderError = InvalidProviderError;
class InvalidClientError extends web3_error_base_1.Web3Error {
    constructor(clientUrl) {
        super(`Client URL "${clientUrl}" is invalid.`);
        this.code = error_codes_1.ERR_INVALID_CLIENT;
    }
}
exports.InvalidClientError = InvalidClientError;
class SubscriptionError extends web3_error_base_1.Web3Error {
    constructor() {
        super(...arguments);
        this.code = error_codes_1.ERR_SUBSCRIPTION;
    }
}
exports.SubscriptionError = SubscriptionError;
class Web3WSProviderError extends web3_error_base_1.Web3Error {
    constructor() {
        super(...arguments);
        this.code = error_codes_1.ERR_WS_PROVIDER;
    }
}
exports.Web3WSProviderError = Web3WSProviderError;
//# sourceMappingURL=provider_errors.js.map