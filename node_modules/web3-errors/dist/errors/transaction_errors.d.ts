import { TransactionReceipt } from 'web3-types';
import { Web3Error } from '../web3_error_base';
export declare class TransactionError<ReceiptType = TransactionReceipt> extends Web3Error {
    receipt?: ReceiptType | undefined;
    code: number;
    constructor(message: string, receipt?: ReceiptType | undefined);
    toJSON(): {
        receipt: ReceiptType | undefined;
        name: string;
        code: number;
        message: string;
    };
}
export declare class RevertInstructionError extends Web3Error {
    reason: string;
    signature: string;
    code: number;
    constructor(reason: string, signature: string);
    toJSON(): {
        reason: string;
        signature: string;
        name: string;
        code: number;
        message: string;
    };
}
export declare class TransactionRevertError extends Web3Error {
    reason: string;
    signature: string;
    receipt: TransactionReceipt;
    code: number;
    constructor(reason: string, signature: string, receipt: TransactionReceipt);
    toJSON(): {
        reason: string;
        signature: string;
        receipt: TransactionReceipt;
        name: string;
        code: number;
        message: string;
    };
}
export declare class NoContractAddressFoundError extends TransactionError {
    constructor(receipt: TransactionReceipt);
    toJSON(): {
        receipt: TransactionReceipt | undefined;
        name: string;
        code: number;
        message: string;
    };
}
export declare class ContractCodeNotStoredError extends TransactionError {
    constructor(receipt: TransactionReceipt);
}
export declare class TransactionRevertedWithoutReasonError extends TransactionError {
    constructor(receipt: TransactionReceipt);
}
export declare class TransactionOutOfGasError extends TransactionError {
    constructor(receipt: TransactionReceipt);
}
export declare class UndefinedRawTransactionError extends TransactionError {
    constructor();
}
export declare class TransactionNotFound extends TransactionError {
    constructor();
}
//# sourceMappingURL=transaction_errors.d.ts.map