"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidValueError = exports.Web3Error = void 0;
class Web3Error extends Error {
    constructor(msg) {
        super(msg);
        this.name = this.constructor.name;
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(new.target.constructor);
        }
        else {
            this.stack = new Error().stack;
        }
    }
    static convertToString(value, unquotValue = false) {
        if (value === null || value === undefined)
            return 'undefined';
        const result = JSON.stringify(value, (_, v) => (typeof v === 'bigint' ? v.toString() : v));
        return unquotValue && ['bigint', 'string'].includes(typeof value)
            ? result.replace(/['\\"]+/g, '')
            : result;
    }
    toJSON() {
        return { name: this.name, code: this.code, message: this.message };
    }
}
exports.Web3Error = Web3Error;
class InvalidValueError extends Web3Error {
    constructor(value, msg) {
        super(`Invalid value given "${Web3Error.convertToString(value, true)}". Error: ${msg}.`);
        this.name = this.constructor.name;
    }
}
exports.InvalidValueError = InvalidValueError;
//# sourceMappingURL=web3_error_base.js.map